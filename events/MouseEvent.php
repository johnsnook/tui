<?php

/**
 * @author John Snook
 * @date Apr 27, 2018
 * @license https://snooky.biz/site/license
 * @copyright 2018 John Snook Consulting
 * Description of MouseEvent
 */

namespace tui\events;

use \tui\helpers\Point;

/**
 * Represents a mouse event
 *
 * Handles all button states (left, middle and right) and down or up.  Also
 * handles scrolling up or down with the scroll wheel
 *
 * @property string $eventName
 * @property \\tui\base\Point $point The x and y of the event
 * @property boolean $ctrlKey Was the ctrl key pressed during the event?
 */
class MouseEvent extends \tui\base\Event {

    /** Event Constants */
    const MOUSE_DOWN = 'Down';
    const MOUSE_UP = 'Up';
    const MOUSE_SCROLL = 'Scroll';
    const CTRL_MOUSE = 16;
    const LEFT_MOUSE = 0;
    const MIDDLE_MOUSE = 1;
    const RIGHT_MOUSE = 2;
    const SCROLL_MOUSE_UP = 64;
    const SCROLL_MOUSE_DOWN = 65;
    const CLICK = 'ClickEvent';

    public $point;
    private $pRawData;
    public $ctrlKey = false;
    public $description;

    /**
     * Parses out the data generated by a mouse click and configures the MouseEvent.
     * @param string $value
     */
    public function setRawData($value) {
        $this->pRawData = $value;
        if (count(explode(';', $value)) !== 3) {
            return false;
        }
        list($type, $x, $y) = explode(';', substr($value, 3, strlen($value) - 1));

        if ($type <= 18) {
            $mouseAction = (substr($value, -1, 1) === 'M' ? 'Down' : 'Up');
        } else {
            $mouseAction = 'Scroll';
        }
        $this->ctrlKey = (boolean) ($type & self::CTRL_MOUSE);
        $this->point = new Point((int) $x, (int) $y);
        switch ($type) {
            case self::LEFT_MOUSE:
            case self::LEFT_MOUSE + self::CTRL_MOUSE:
                $this->name = "Left{$mouseAction}";
                $this->description = "Left Mouse Button {$mouseAction}";
                break;
            case self::MIDDLE_MOUSE:
            case self::MIDDLE_MOUSE + self::CTRL_MOUSE:
                $this->name = "Middle{$mouseAction}";
                $this->description = "Middle Mouse Button {$mouseAction}";
                break;
            case self::RIGHT_MOUSE:
            case self::RIGHT_MOUSE + self::CTRL_MOUSE:
                $this->name = "Right{$mouseAction}";
                $this->description = "Right Mouse Button {$mouseAction}";
                break;
            case self::SCROLL_MOUSE_UP:
                $this->name = "{$mouseAction}Up";
                $this->description = "{$mouseAction}wheel Up";
                break;
            case self::SCROLL_MOUSE_DOWN:
                $this->name = "{$mouseAction}Down";
                $this->description = "{$mouseAction}wheel Down";
                break;
        }
        $this->description = ($this->ctrlKey ? 'CTRL+' : '') . $this->description;
    }

}
